<?xml version="1.0"?>
<launch>

  <arg name="arm_id"        default="panda" doc="Name of the panda robot to spawn" />
  <arg name="load_gripper"  default="true"  />
  <arg name="transmission"  default="effort" />
  <arg name="world_name" default=""/>

  <!-- <include file="$(find gazebo_ros)/launch/empty_world.launch">
  <arg name="world_name" value="$(find shared_autonomy)/worlds/franka_custom.world"/>
</include> -->


<arg name="world" default="$(find shared_autonomy)/worlds/franka_custom.world" />

  <arg name="gazebo_gui" default="true"  doc="Start Gazebo GUI"/>
  <arg name="paused"     default="false" doc="Start Gazebo paused"/>


  <!-- Argomenti: posizione cilindro1 -->
  <arg name="cube1_x" default="0.4" />
  <arg name="cube1_y" default="0.4" />
  <arg name="cube1_z" default="0.37" />


  <!-- Argomenti: posizione cilindro2 -->
  <arg name="cube2_x" default="0.6" />
  <arg name="cube2_y" default="0.2" />
  <arg name="cube2_z" default="0.37" />

  <!-- Argomenti: posizione cilindro3 -->
  <!-- <arg name="cylinder3_x" default="0.2" />
  <arg name="cylinder3_y" default="0.6" />
  <arg name="cylinder3_z" default="0.37" /> -->

  <!-- Esporta anche come parametri rosparam per usarli nei tuoi nodi -->
  <param name="cubes/positions/cube1" value="$(arg cube1_x) $(arg cube1_y) $(arg cube1_z)" />
  <param name="cubes/positions/cube2" value="$(arg cube2_x) $(arg cube2_y) $(arg cube2_z)" />
  <!-- <param name="cylinders/positions/cylinder3" value="$(arg cylinder3_x) $(arg cylinder3_y) $(arg cylinder3_z)" -->
  

 <!-- Spawn dei tavoli -->
  <node name="table1" pkg="gazebo_ros" type="spawn_model" output="screen"
        args="-sdf -file $(find panda_gazebo_models)/models/table/model.sdf -model table1 -x 0.4 -y 0.4 -z 0.0 -Y 2.285" />
  <node name="table2" pkg="gazebo_ros" type="spawn_model" output="screen"
        args="-sdf -file $(find panda_gazebo_models)/models/table_with_cross/model.sdf -model table2 -x 0.4 -y -0.4 -z 0.0 -Y 0.785" />
 <!-- Spawn dei cubi -->
  <node name="cube1" pkg="gazebo_ros" type="spawn_model" output="screen"
        args="-sdf -file $(find panda_gazebo_models)/models/red_cube/model.sdf -model cube1 -x $(arg cube1_x) -y $(arg cube1_y) -z $(arg cube1_z)" />

  <node name="cube2" pkg="gazebo_ros" type="spawn_model" output="screen"
        args="-sdf -file $(find panda_gazebo_models)/models/blue_cube/model.sdf -model cube2 -x $(arg cube2_x) -y $(arg cube2_y) -z $(arg cube2_z)" />

  <!-- <node name="cylinder3" pkg="gazebo_ros" type="spawn_model" output="screen"
        args="-sdf -file $(find panda_gazebo_models)/models/blue_cylinder_small/model.sdf -model cylinder3 -x $(arg cylinder3_x) -y $(arg cylinder3_y) -z $(arg cylinder3_z)" /> -->


  <!-- <node name="block1" pkg="gazebo_ros" type="spawn_model" output="screen"
      args="-sdf -file $(find panda_gazebo_models)/models/wood_cube_10cm/model.sdf -model block1 -x 0.5 -y 0.5 -z 0.365" /> -->


  <!-- <include file="$(find realsense2_camera)/launch/rs_camera.launch">
    <arg name="enable_color"  value="true"/>
    <arg name="enable_depth"  value="true"/>
    <arg name="align_depth"   value="true"/>
  </include> -->

  <rosparam file="$(find franka_example_controllers)/config/franka_example_controllers.yaml"
            subst_value="true"/>

  <include file="$(find franka_gazebo)/launch/panda_softbots.launch"
           pass_all_args="true">
    <arg name="headless"                value="$(eval not arg('gazebo_gui'))"/>
    <arg name="use_gripper"             value="$(arg load_gripper)"/>
    <arg name="interactive_marker"      value="false"/>
    <arg name="controller"              value="cartesian_impedance_example_controller"/>
  </include>

  <!-- <include file="$(find franka_control)/launch/panda_softbots.launch"
            pass_all_args="true">
      <arg name="headless"                value="$(eval not arg('gazebo_gui'))"/>
      <arg name="use_gripper"             value="$(arg load_gripper)"/>
      <arg name="interactive_marker"      value="false"/>
      <arg name="controller"              value="cartesian_impedance_example_controller"/>
    </include> -->


  <node pkg="shared_autonomy" type="hand_to_pose.py" name="hand_to_pose" output="screen"> </node>


  <!-- <node pkg="shared_autonomy" type="gesture_recognizer.py" name="gesture_recognizer" output="screen">
    <param name="model_path" value="$(find shared_autonomy)/models/gesture_recognizer.task" />
  </node> -->


</launch>